kind: Deployment
apiVersion: apps/v1
metadata:
# set your lab user name
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
# set your lab user name
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
# set your lab user name
        app: {{ .Chart.Name }}
    spec:
      volumes:
        - name: index-html
          configMap:
            name: '{{ .Chart.Name }}-html'
            defaultMode: 420
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Chart.Name }}
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: index-html
            mountPath: {{ .Values.volume.mount.path }} # this will mount the html.index file to it application location
          env:
            - name: PORT
              value: {{ .Values.containers.containerPort | quote }}
          readinessProbe:
            httpGet:
              path: {{ tpl .Values.probes.readiness.path . | quote }} # this check the application url path
              port: {{ .Values.containers.containerPort  }} # In which port the Application is listening
              scheme: HTTP
            initialDelaySeconds: {{ tpl .Values.probes.readiness.initialDelaySeconds . }}  # Template function used here
            timeoutSeconds: {{ tpl .Values.probes.readiness.timeoutSeconds . }} # Template function used here
            periodSeconds: {{ tpl .Values.probes.readiness.periodSeconds . }} # Template function used here
            successThreshold: {{ tpl .Values.probes.readiness.successThreshold . }} # Template function used here
            failureThreshold: {{ tpl .Values.probes.readiness.failureThreshold . }}
          livenessProbe:
            httpGet:
              path: {{ tpl .Values.probes.liveness.path . | quote }}
              port: {{ .Values.containers.containerPort }}
              scheme: HTTP
            initialDelaySeconds: {{ tpl .Values.probes.liveness.initialDelaySeconds . }}  # Template function used here
            timeoutSeconds: {{ tpl .Values.probes.liveness.timeoutSeconds . }} # Template function used here
            periodSeconds: {{ tpl .Values.probes.liveness.periodSeconds . }} # Template function used here
            successThreshold: {{ tpl .Values.probes.liveness.successThreshold . }} # Template function used here
            failureThreshold: {{ tpl .Values.probes.liveness.failureThreshold . }} # count to decalre failure
# Update with the image you build in part 1
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10